(()=>{"use strict";let e=[];const t=t=>e.findIndex(e=>e.id===Number(t)),n=()=>(e=JSON.parse(localStorage.getItem("tasks"))||[],e),o=n=>{const o=t(n);if(!(o<0))return e.splice(o,1),r()},r=()=>{try{localStorage.setItem("tasks",JSON.stringify(e))}catch(e){alert("Sorry, data storage failed: "+e.message)}return n()},a={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"},s=([e,t,n])=>{const o=document.createElementNS("http://www.w3.org/2000/svg",e);return Object.keys(t).forEach(e=>{o.setAttribute(e,String(t[e]))}),n?.length&&n.forEach(e=>{const t=s(e);o.appendChild(t)}),o},c=e=>"string"==typeof e?e:e&&e.class?e.class&&"string"==typeof e.class?e.class.split(" "):e.class&&Array.isArray(e.class)?e.class:"":"",i=(e,{nameAttr:t,icons:n,attrs:o})=>{const r=e.getAttribute(t);if(null==r)return;const i=n[r.replace(/(\w)(\w*)(_|-|\s*)/g,(e,t,n)=>t.toUpperCase()+n.toLowerCase())];if(!i)return console.warn(`${e.outerHTML} icon name was not found in the provided icons object.`);const d=(e=>Array.from(e.attributes).reduce((e,t)=>(e[t.name]=t.value,e),{}))(e),l={...a,"data-lucide":r,...o,...d},u=["lucide",`lucide-${r}`,d,o].flatMap(c).map(e=>e.trim()).filter(Boolean).filter((e,t,n)=>n.indexOf(e)===t).join(" ");u&&Object.assign(l,{class:u});const h=((e,t={})=>{const n={...a,...t};return s(["svg",n,e])})(i,l);return e.parentNode?.replaceChild(h,e)},d=[["path",{d:"M18 6 6 18"}],["path",{d:"m6 6 12 12"}]],l=[["path",{d:"M5 12h14"}],["path",{d:"M12 5v14"}]],u=[["path",{d:"m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8"}],["path",{d:"M5 8h14"}],["path",{d:"M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0"}],["path",{d:"m12 8 1-6h2"}]],h=document.querySelector("#opentasks ul"),p=document.querySelector("#closedtasks ul"),f=document.querySelector("#noopentasks"),m=e=>{if(h.innerHTML="",p.innerHTML="",e&&e.length>0){const t=e.filter(e=>!e.done),n=e.filter(e=>e.done);t.length>0?(f.classList.add("hidden"),t.forEach(e=>g(h,e))):f.classList.remove("hidden"),n.length>0&&n.forEach(e=>g(p,e))}else f.classList.remove("hidden");(({icons:e={},nameAttr:t="data-lucide",attrs:n={}}={})=>{if(!Object.values(e).length)throw new Error("Please provide an icons object.\nIf you want to use all the icons you can import it like:\n `import { createIcons, icons } from 'lucide';\nlucide.createIcons({icons});`");if("undefined"==typeof document)throw new Error("`createIcons()` only works in a browser environment.");const o=document.querySelectorAll(`[${t}]`);if(Array.from(o).forEach(o=>i(o,{nameAttr:t,icons:e,attrs:n})),"data-lucide"===t){const t=document.querySelectorAll("[icon-name]");t.length>0&&(console.warn("[Lucide] Some icons were found with the now deprecated icon-name attribute. These will still be replaced for backwards compatibility, but will no longer be supported in v1.0 and you should switch to data-lucide"),Array.from(t).forEach(t=>i(t,{nameAttr:"icon-name",icons:e,attrs:n})))}})({icons:{X:d,Plus:l,CupSoda:u}})},g=(e,t)=>{const n=`\n            <li>\n                <div>\n                    <input type="checkbox" data-id="${t.id}" ${t.done?"checked":""}>\n                </div>\n                <div class="grow">\n                    <textarea rows="1" data-id="${t.id}">${t.task}</textarea>\n                </div>\n                <div>\n                    <a href="#" data-id="${t.id}" class="delete"><i data-lucide="x"></i></a>\n                </div>\n            </li>`;e.insertAdjacentHTML("beforeend",n)};function w(){const a=()=>{document.addEventListener("click",n=>{const a=n.target.closest("a");a?a.matches(".delete")&&m(o(a.dataset.id)):n.target.matches("input[type=checkbox]")&&m((n=>{const o=t(n);if(!(o<0))return e[o].done=!e[o].done,r()})(n.target.dataset.id))}),document.addEventListener("keydown",a=>{const s=a.target;if(s.matches("textarea")&&"Enter"===a.key)if(a.preventDefault(),a.ctrlKey||a.metaKey){const e=s.selectionStart,t=s.selectionEnd,n=s.value;s.value=n.substring(0,e)+"\n"+n.substring(t)}else m((a=>{const s=a.dataset.id,c=a.value,i=""===c.replace(/\s+/g,"");return s?i?o(s):((n,o)=>{const a=t(o);if(!(a<0))return e[a].task=n,r()})(a.value,s):i?n():(a.value="",(t=>(console.log(e),e.push({id:Date.now(),task:t,done:!1}),r()))(c))})(s))})};(()=>{a();const e=n();e&&m(e)})()}window.addEventListener("DOMContentLoaded",()=>{w(),function(){const e=e=>{e.style.height="auto",e.style.height=e.scrollHeight+"px"},t=t=>{t.addEventListener("input",()=>{n(t)}),t.addEventListener("change",()=>{n(t)});const o=Object.getOwnPropertyDescriptor(HTMLTextAreaElement.prototype,"value");Object.defineProperty(t,"value",{set(e){o.set.call(this,e),n(this)},get(){return o.get.call(this)}}),e(t)},n=t=>{t.matches("textarea")&&e(t)};document.querySelectorAll("textarea").forEach(t),new MutationObserver(e=>{for(const n of e)n.addedNodes.forEach(e=>{1==e.nodeType&&("TEXTAREA"===e.tagName&&t(e),e.querySelectorAll?.("textarea")?.forEach(t))})}).observe(document.body,{childList:!0,subtree:!0})}()})})();