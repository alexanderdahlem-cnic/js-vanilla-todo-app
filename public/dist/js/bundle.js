(()=>{var e={432:()=>{class e extends HTMLElement{constructor(){super()}connectedCallback(){this.resolveElements(),this.addListeners()}resolveElements=function(){this.inputfield=this.querySelector(".taskinputfield")};addListeners=function(){this.inputfield.addEventListener("keydown",e=>{const t=e.target;if("Enter"===e.key){if(e.shiftKey)return;e.preventDefault();const n=""===t.textContent.replace(/\s+/g,""),s=e.target.dataset.id;if(s)return void(n?this.dispatchEvent(new CustomEvent("deleteTask",{bubbles:!0,detail:{id:s}})):this.dispatchEvent(new CustomEvent("updateTask",{bubbles:!0,detail:{task:this.sanitize(t.innerHTML),id:s}})));if(n)return;this.dispatchEvent(new CustomEvent("createTask",{bubbles:!0,detail:{task:this.sanitize(t.innerHTML)}})),t.innerHTML=""}}),this.inputfield.addEventListener("paste",e=>{setTimeout(()=>{const t=this.sanitize(e.target.innerHTML);e.target.innerHTML=t},10)})};sanitize=function(e){return e.replace(/<(?!br\s*\/?)[^>]+>/gi,"")}}customElements.define("task-input",e)},984:()=>{class e extends HTMLElement{constructor(){super()}connectedCallback(){this.resolveElements(),this.addListeners()}resolveElements=function(){this.checkbox=this.querySelector('input[type="checkbox"]'),this.delete=this.querySelector("a.delete")};addListeners=function(){this.checkbox.addEventListener("click",e=>{const t=e.target.dataset.id;this.dispatchEvent(new CustomEvent("toggleTaskStatus",{bubbles:!0,detail:{id:t}}))}),this.delete.addEventListener("click",e=>{e.preventDefault();const t=e.target.closest("a");if(t){const e=t.dataset.id;this.dispatchEvent(new CustomEvent("deleteTask",{bubbles:!0,detail:{id:e}}))}})}}customElements.define("task-entry",e)}},t={};function n(s){var i=t[s];if(void 0!==i)return i.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,n),a.exports}(()=>{"use strict";let e=[];const t=t=>e.findIndex(e=>e.id===Number(t)),s=()=>(e=JSON.parse(localStorage.getItem("tasks"))||[],e),i=()=>{try{localStorage.setItem("tasks",JSON.stringify(e))}catch(e){alert("Sorry, data storage failed: "+e.message)}return s()},a={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"},r=([e,t,n])=>{const s=document.createElementNS("http://www.w3.org/2000/svg",e);return Object.keys(t).forEach(e=>{s.setAttribute(e,String(t[e]))}),n?.length&&n.forEach(e=>{const t=r(e);s.appendChild(t)}),s},o=e=>"string"==typeof e?e:e&&e.class?e.class&&"string"==typeof e.class?e.class.split(" "):e.class&&Array.isArray(e.class)?e.class:"":"",d=(e,{nameAttr:t,icons:n,attrs:s})=>{const i=e.getAttribute(t);if(null==i)return;const d=n[i.replace(/(\w)(\w*)(_|-|\s*)/g,(e,t,n)=>t.toUpperCase()+n.toLowerCase())];if(!d)return console.warn(`${e.outerHTML} icon name was not found in the provided icons object.`);const c=(e=>Array.from(e.attributes).reduce((e,t)=>(e[t.name]=t.value,e),{}))(e),l={...a,"data-lucide":i,...s,...c},u=["lucide",`lucide-${i}`,c,s].flatMap(o).map(e=>e.trim()).filter(Boolean).filter((e,t,n)=>n.indexOf(e)===t).join(" ");u&&Object.assign(l,{class:u});const h=((e,t={})=>{const n={...a,...t};return r(["svg",n,e])})(d,l);return e.parentNode?.replaceChild(h,e)},c=[["path",{d:"M18 6 6 18"}],["path",{d:"m6 6 12 12"}]],l=[["path",{d:"M5 12h14"}],["path",{d:"M12 5v14"}]],u=[["path",{d:"m6 8 1.75 12.28a2 2 0 0 0 2 1.72h4.54a2 2 0 0 0 2-1.72L18 8"}],["path",{d:"M5 8h14"}],["path",{d:"M7 15a6.47 6.47 0 0 1 5 0 6.47 6.47 0 0 0 5 0"}],["path",{d:"m12 8 1-6h2"}]],h=document.querySelector("#opentasks ul"),p=document.querySelector("#closedtasks ul"),f=document.querySelector("#noopentasks"),m=e=>{if(h.innerHTML="",p.innerHTML="",e&&e.length>0){const t=e.filter(e=>!e.done),n=e.filter(e=>e.done);t.length>0?(f.classList.add("hidden"),t.forEach(e=>v(h,e))):f.classList.remove("hidden"),n.length>0&&n.forEach(e=>v(p,e))}else f.classList.remove("hidden");(({icons:e={},nameAttr:t="data-lucide",attrs:n={}}={})=>{if(!Object.values(e).length)throw new Error("Please provide an icons object.\nIf you want to use all the icons you can import it like:\n `import { createIcons, icons } from 'lucide';\nlucide.createIcons({icons});`");if("undefined"==typeof document)throw new Error("`createIcons()` only works in a browser environment.");const s=document.querySelectorAll(`[${t}]`);if(Array.from(s).forEach(s=>d(s,{nameAttr:t,icons:e,attrs:n})),"data-lucide"===t){const t=document.querySelectorAll("[icon-name]");t.length>0&&(console.warn("[Lucide] Some icons were found with the now deprecated icon-name attribute. These will still be replaced for backwards compatibility, but will no longer be supported in v1.0 and you should switch to data-lucide"),Array.from(t).forEach(t=>d(t,{nameAttr:"icon-name",icons:e,attrs:n})))}})({icons:{X:c,Plus:l,CupSoda:u}})},v=(e,t)=>{const n=document.createElement("li");n.innerHTML=`\n            <task-entry>\n                <div>\n                    <input type="checkbox" data-id="${t.id}" ${t.done?"checked":""}>\n                </div>\n                <task-input class="grow">\n                    <div data-id="${t.id}" class="taskinputfield" contenteditable></div>\n                </task-input>\n                <div>\n                    <a href="#" data-id="${t.id}" class="delete"><i data-lucide="x"></i></a>\n                </div>\n            </task-entry>\n            `,n.querySelector(".taskinputfield").innerHTML=t.task,e.prepend(n)};function k(){(()=>{document.addEventListener("toggleTaskStatus",n=>{m((n=>{const s=t(n);if(!(s<0))return e[s].done=!e[s].done,i()})(n.detail.id))}),document.addEventListener("deleteTask",n=>{m((n=>{const s=t(n);if(!(s<0))return e.splice(s,1),i()})(n.detail.id))}),document.addEventListener("createTask",t=>{var n;m((n=t.detail.task,e.push({id:Date.now(),task:n,done:!1}),i()))}),document.addEventListener("updateTask",n=>{m(((n,s)=>{const a=t(s);if(!(a<0))return e[a].task=n,i()})(n.detail.task,n.detail.id))});const n=s();n&&m(n)})()}n(984),n(432),window.addEventListener("DOMContentLoaded",()=>{k()})})()})();